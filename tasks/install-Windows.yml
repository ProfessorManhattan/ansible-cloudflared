---
- name: Ensure Megabyte Labs configuration directory exists
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  loop:
    - '%USERPROFILE%\.config'
    - '%USERPROFILE%\.config\megabytelabs'

- name: "Ensure installation folder for {{ app_name }} exists"
  ansible.windows.win_file:
    path: "{{ cloudflared_src_dir }}"
    state: directory
  when: install_cloudflared

- name: "Check if {{ app_name }} has configuration stored in '%USERPROFILE%/.config/megabytelabs/cloudflared'"
  ansible.windows.win_stat:
    path: '%USERPROFILE%\.config\megabytelabs\cloudflared'
  register: cloudflared_config

- name: "Detect previously installed {{ app_name }} version"
  ansible.windows.win_shell: type cloudflared
  args:
    chdir: '%USERPROFILE%\.config\megabytelabs'
  changed_when: false
  register: current_cloudflared_version
  when: cloudflared_config.stat.exists

- name: "Detect the latest {{ app_name }} version"
  ansible.windows.win_uri:
    url: https://api.github.com/repos/cloudflare/cloudflared/releases/latest
    return_content: true
  register: cloudflared_latest_release_tag

- name: "Determine whether or not the latest version of {{ app_name }} is already installed"
  set_fact:
    install_cloudflared: "{{ (current_cloudflared_version.skipped | default(false)) or \
      ((not current_cloudflared_version.skipped | default(false)) and \
      (current_cloudflared_version.stdout | trim != cloudflared_latest_release_tag.json.tag_name)) }}"

- name: "Find the Checksum of {{ app_name }} installer"
  set_fact:
    cloudflared_checksum: "{{ cloudflared_latest_release_tag.json.body | regex_search('cloudflared-windows-amd64.exe. .*') \
      | regex_replace('cloudflared-windows-amd64.exe. ','') }}"
  when: install_cloudflared

- name: "Ensure {{ app_name }} is installed"
  ansible.windows.win_get_url:
    url: "https://github.com/cloudflare/cloudflared/releases/download/{{ cloudflared_latest_release_tag.json.tag_name }}/cloudflared-windows-amd64.exe"
    dest: "{{ cloudflared_src_dir }}/cloudflared.exe"
    checksum: "{{ cloudflared_checksum }}"
    checksum_algorithm: sha256
  when: install_cloudflared

- name: "Ensure {{ app_name }} is added to PATH"
  ansible.windows.win_path:
    elements:
      - "{{ cloudflared_src_dir }}"

- name: "Save meta information about the version of {{ app_name }} that was installed"
  ansible.windows.win_copy:
    dest: '%USERPROFILE%\.config\megabytelabs\cloudflared'
    content: |
      {{ cloudflared_latest_release_tag.json.tag_name }}
  when: install_cloudflared
